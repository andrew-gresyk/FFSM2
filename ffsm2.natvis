<?xml version="1.0" encoding="utf-8"?>

<!-- https://docs.microsoft.com/en-us/visualstudio/debugger/format-specifiers-in-cpp -->

<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">

	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

	<Type Name="std::type_index">
		<DisplayString Condition="_Tptr->_Data._UndecoratedName">{_Tptr->_Data._UndecoratedName,sb}</DisplayString>
		<DisplayString Condition="_Tptr->_Data._DecoratedName[5]=='$'">
			{&amp;_Tptr->_Data._DecoratedName[6],[strchr(_Tptr->_Data._DecoratedName,'@') - _Tptr->_Data._DecoratedName - 6]sb}
			&lt;
			{strstr(_Tptr->_Data._DecoratedName,"@V") + 2,[strstr(_Tptr->_Data._DecoratedName,"@?") - strstr(_Tptr->_Data._DecoratedName,"@V") - 2]sb}
			&gt;
		</DisplayString>
		<DisplayString>{&amp;_Tptr->_Data._DecoratedName[4],[strchr(_Tptr->_Data._DecoratedName,'@') - _Tptr->_Data._DecoratedName - 4]sb}</DisplayString>
		<Expand HideRawView="true" />
	</Type>

	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

	<Type Name="ffsm2::detail::ArrayT&lt;*&gt;">
		<DisplayString>&lt;{(unsigned) _count &amp; 0xFF}&gt;</DisplayString>
		<Expand HideRawView="true">
			<ArrayItems>
				<Size>_count</Size>
				<ValuePointer>_items</ValuePointer>
			</ArrayItems>
		</Expand>
	</Type>

	<!-- ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ -->

	<Type Name="ffsm2::detail::StaticArrayT&lt;*&gt;">
		<Expand HideRawView="true">
			<ArrayItems>
				<Size>$T2</Size>
				<ValuePointer>_items</ValuePointer>
			</ArrayItems>
		</Expand>
	</Type>

	<!-- ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ -->

	<Type Name="ffsm2::detail::BitArrayT&lt;*&gt;">
		<Expand HideRawView="true">
			<IndexListItems>
				<Size>CAPACITY</Size>
				<ValueNode>(_storage[$i / 8] &gt;&gt; ($i % 8)) &amp; 0x1</ValueNode>
			</IndexListItems>
		</Expand>
	</Type>

	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

	<Type Name="ffsm2::detail::Registry">
		<DisplayString Condition="active	== INVALID_STATE_ID &amp;&amp; requested	== INVALID_STATE_ID">(■)</DisplayString>
		<DisplayString Condition="active	== INVALID_STATE_ID">(► {(unsigned) requested &amp; 0xFF})</DisplayString>
		<DisplayString Condition="requested	== INVALID_STATE_ID">({(unsigned) active &amp; 0xFF} ■)</DisplayString>
		<DisplayString>({(unsigned) active &amp; 0xFF} ► {(unsigned) requested &amp; 0xFF})</DisplayString>
	</Type>

	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

	<Type Name="ffsm2::detail::TransitionBase">
		<DisplayString Condition="destination == INVALID_STATE_ID">(■)</DisplayString>
		<DisplayString Condition="origin == INVALID_STATE_ID">(EXTERNAL ► {(unsigned) destination &amp; 0xFF}})</DisplayString>
		<DisplayString>({(unsigned) origin &amp; 0xFF} ► {(unsigned) destination &amp; 0xFF})</DisplayString>
		<Expand HideRawView="true" />
	</Type>

	<Type Name="ffsm2::detail::TransitionT&lt;*&gt;">
		<DisplayString Condition="destination == INVALID_STATE_ID">(■)</DisplayString>
		<DisplayString Condition="origin == INVALID_STATE_ID">(EXTERNAL ► {(unsigned) destination &amp; 0xFF})</DisplayString>
		<DisplayString>({(unsigned) origin &amp; 0xFF} ► {(unsigned) destination &amp; 0xFF})</DisplayString>
		<Expand HideRawView="true">
			<ExpandedItem Optional="true">*((Payload*) &amp;storage)</ExpandedItem>
		</Expand>
	</Type>

	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

	<Type Name="ffsm2::detail::ControlT&lt;*&gt;">
		<DisplayString>{_core.context}</DisplayString>
	</Type>

	<!-- ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ -->

	<Type Name="ffsm2::detail::PlanControlT&lt;*&gt;">
		<DisplayString>({_status})</DisplayString>
	</Type>

	<!-- ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ -->

	<Type Name="ffsm2::detail::FullControlT&lt;*&gt;">
		<DisplayString>[{_status}]</DisplayString>
	</Type>

	<!-- ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ -->

	<Type Name="ffsm2::detail::GuardControlT&lt;*,*&gt;">
		<DisplayString>[{_status}] ({_pending})</DisplayString>
	</Type>

	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

	<Type Name="ffsm2::detail::Status">
		<DisplayString>{result}</DisplayString>
		<Expand HideRawView="true" />
	</Type>

	<!-- ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ -->

	<Type Name="ffsm2::detail::TaskBase">
		<DisplayString Condition="origin == INVALID_STATE_ID">(■)</DisplayString>
		<DisplayString>({(unsigned) origin} ► {(unsigned) destination})</DisplayString>
		<Expand HideRawView="true" />
	</Type>

	<Type Name="ffsm2::detail::TaskListT&lt;*&gt;">
		<Expand HideRawView="true">
			<IndexListItems Condition="_count > 0">
				<Size>CAPACITY</Size>
				<ValueNode>_items[$i]</ValueNode>
			</IndexListItems>
		</Expand>
	</Type>

	<Type Name="ffsm2::detail::TaskLink">
		<DisplayString Condition="prev == INVALID_STATE_ID &amp;&amp; next == INVALID_STATE_ID">[■]</DisplayString>
		<DisplayString Condition="prev == INVALID_STATE_ID">[► {(unsigned) next}]</DisplayString>
		<DisplayString Condition="next == INVALID_STATE_ID">[{(unsigned) prev} ◄]</DisplayString>
		<DisplayString>[{(unsigned) prev} ◄► {(unsigned) next}]</DisplayString>
	</Type>

	<Type Name="ffsm2::detail::Bounds">
		<DisplayString>[{(unsigned) first} .. {(unsigned) last}]</DisplayString>
		<Expand HideRawView="true" />
	</Type>

	<!-- ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ -->

	<Type Name="ffsm2::detail::PlanDataT&lt;*&gt;">
		<Expand HideRawView="true">
			<CustomListItems MaxItemsPerView="100">
				<Variable Name="i" InitialValue="tasksBounds.first" />

				<If Condition="tasksBounds.first != INVALID_LONG &amp;&amp; tasksBounds.first != tasksBounds.last">
					<Loop>
						<Item>tasks._items[i]</Item>
						<Exec>i = taskLinks[i].next</Exec>
						<Break Condition="i == tasksBounds.last" />
					</Loop>
					<Item>tasks._items[tasksBounds.last]</Item>
				</If>

				<If Condition="tasksBounds.first != INVALID_LONG &amp;&amp; tasksBounds.first == tasksBounds.last">
					<Item>tasks._items[tasksBounds.last]</Item>
				</If>

			</CustomListItems>
		</Expand>
	</Type>

	<!-- ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ -->

	<Type Name="ffsm2::detail::CPlanT&lt;*&gt;">
		<DisplayString>{_planData}</DisplayString>
		<Expand HideRawView="true">
			<ExpandedItem>_planData</ExpandedItem>
		</Expand>
	</Type>

	<Type Name="ffsm2::detail::PlanT&lt;*&gt;">
		<DisplayString>{_planData}</DisplayString>
		<Expand HideRawView="true">
			<ExpandedItem>_planData</ExpandedItem>
		</Expand>
	</Type>

	<!-- ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ -->

	<Type Name="ffsm2::detail::CPlanT&lt;*&gt;::Iterator">
		<DisplayString Condition="_curr == INVALID_LONG">(■)</DisplayString>
		<DisplayString Condition="_curr != INVALID_LONG">{_plan._planData.tasks._items[_curr]}</DisplayString>
		<DisplayString Condition="_curr != INVALID_LONG &amp;&amp; _next != INVALID_LONG">{_plan._planData.tasks._items[_curr]}, {_plan._planData.tasks._items[_next]}</DisplayString>
		<Expand HideRawView="true" />
	</Type>

	<Type Name="ffsm2::detail::PlanT&lt;*&gt;::Iterator">
		<DisplayString Condition="_curr == INVALID_LONG">(■)</DisplayString>
		<DisplayString Condition="_curr != INVALID_LONG">{_plan._planData.tasks._items[_curr]}</DisplayString>
		<DisplayString Condition="_curr != INVALID_LONG &amp;&amp; _next != INVALID_LONG">{_plan._planData.tasks._items[_curr]}, {_plan._planData.tasks._items[_next]}</DisplayString>
		<Expand HideRawView="true" />
	</Type>

	<Type Name="ffsm2::detail::PlanT&lt;*&gt;::CIterator">
		<DisplayString Condition="_curr == INVALID_LONG">(■)</DisplayString>
		<DisplayString Condition="_curr != INVALID_LONG">{_plan._planData.tasks._items[_curr]}</DisplayString>
		<DisplayString Condition="_curr != INVALID_LONG &amp;&amp; _next != INVALID_LONG">{_plan._planData.tasks._items[_curr]}, {_plan._planData.tasks._items[_next]}</DisplayString>
		<Expand HideRawView="true" />
	</Type>

	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

	<Type Name="ffsm2::detail::S_&lt;*&gt;">
		<DisplayString Optional="true">{TYPE}</DisplayString>
		<Expand HideRawView="true" />
	</Type>

	<!-- ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ -->

	<Type Name="ffsm2::detail::C_&lt;*&gt;">
		<DisplayString>({(HeadState) *this})</DisplayString>
	</Type>

	<Type Name="ffsm2::detail::CS_&lt;*&gt;">
		<DisplayString Optional="true">{(LHalf) *this} {(RHalf) *this}</DisplayString>
		<DisplayString Optional="true">{(Single) *this}</DisplayString>
	</Type>

	<!-- ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ -->

	<!-- ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ -->

	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

	<Type Name="ffsm2::Iterator&lt;*&gt;">
		<DisplayString>[{_cursor}] = {_t[_cursor]}</DisplayString>
		<Expand>
			<ExpandedItem>_container</ExpandedItem>
		</Expand>
	</Type>

	<!-- ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ -->

	<Type Name="ffsm2::StructureEntry">
		<DisplayString Condition=" isActive">█ {prefix,sub}{name,sb}</DisplayString>
		<DisplayString Condition="!isActive">░ {prefix,sub}{name,sb}</DisplayString>
		<Expand HideRawView="true" />
	</Type>

	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

	<Type Name="Event">
		<DisplayString Condition="target == ffsm2::INVALID_STATE_ID"		   >{type, en} [{(unsigned) origin}]</DisplayString>
		<DisplayString Condition="origin == ffsm2::INVALID_STATE_ID">(external) {type, en} [{(unsigned) target}]</DisplayString>
		<DisplayString									  >[{(unsigned)origin}] {type, en} [{(unsigned) target}]</DisplayString>
		<Expand HideRawView="true" />
	</Type>

	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

</AutoVisualizer>
